#MapReduce 

- 구글에서 대용량 데이터 처리를 분산 병렬 컴퓨팅에서 처리하기 위한 목적으로 제작하여 2004년 발표한 소프트웨어 프레임워크다.
이 프레임워크는 페타바이트 이상의 대용량 데이터를 신뢰도가 낮은 컴퓨터로 구성된 클러스터 환경에서 병렬 처리를 지원하기 위해서 개발되었다. 
함수형 프로그래밍에서 일반적으로 사용되는 Map과 Reduce라는 함수 기반으로 주로 구성된다. 

# MapReduce가 제공하는 것 

– Automatic parallelization and distribution : 자동 병렬화와 분배 
– Fault-tolerance    :  오류 수용, 오류를 견뎌냄 
– I/O scheduling     :  입출력 스케줄링 
– Status and monitoring : 상태 추적 및 모니터링 



# Map   
key , value ->map -> 다른 key ,value 가 나옴
이 사이의 변환이 map임

# Reduce 
key 에 해당하는 모든 값들이 들어있는 list []  ->  list [v] 로 바꿔줌. 
많은 입력들을 reduce 가 한개로 합쳐줌.


이 두개의 작업을 많은 클러스터에서 자동으로 돌려주는 것이 MapReduce이다. 


ex) 

한권의 책 - 각각 학생들에게 책의 한장씩을 나눠주고 Time 이라는 단어가 나오면 포스트잇에 Time 1 이라고 적어서 붙이라고함 
다른 여러 학생들도 마찬가지로 Time 이라는 단어가 나오면 똑같이 하도록함 

이후 각각의 학생들의 포스트잇을 모아서 정렬하여 Time이라고 적힌 포스트잇을 한명에게 줌 -> Time이 나온 횟수만큼 가질 것인데, 만약 15개가 나왔다면 Time 15 이다.마찬가지로 다른 단어에 한해서도 
그런 방법으로 설정한다. 여기서 Time 1 이라고 적어서 붙이라고 하는 것을 Map 의 역할이라고 생각하면 되며, 단어을 취합하여 Time 15 , Love 15 , 등등의 하나로 만드는 것을 Reduce 의 역할이라고 
생각하면 된다. 그 가운데의 모든 것들은 MapReduce 프로그램이 하는 것이다. 

입력을 잘 나누어 ( 한권의 책을 나누어 ) -> 각각의 컴퓨터가 읽어가게끔 i/o를 수행 ( 학생들이 한장씩 받음 )  -> 컴퓨팅한 결과들을 모아서 정렬 ( 각자의 포스트잇의 Time 1 포스트잇을 같은 한곳으로 보냄 ) 
-> 그 결과들을 Reducer 들에게 입력을 넣어줌 ( Time 1 들을 모음 ) 
어떤 컴퓨터에 문제가 생기면 다른 놀고있는 컴퓨터나 다른 컴퓨터에서 일을 수행하게끔 한다 ( 어떤 학생이 배탈이 나거나 결석 - Map Reduce의 Fault-tolerance , Job Distribution , Network , Scheduling 등의 역할 ) 



#MapReduce실습 

# root 로 접속해서 python 패키지 관리자 설치하기 

[root@sandbox-hdp ~]# yum install python-pip 

# mrjob 설치하기 
[root@sandbox-hdp ~]# pip install mrjob

MapReduce 디렉토리를 만들고 필요한 파이썬 코드를 넣어본다. 

실습은 다른 커밋으로 해볼것이다. 










